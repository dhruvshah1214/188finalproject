name: CPMonitor

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  test:
    # Name the Job
    name: Test application
    # Set the type of machine to run on
    runs-on: ubuntu-20.04

    steps:
      # Installs and sets up python/pip on the machine
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      # TODO: install poetry and test code
      - name: Install poetry
        run: pip3 install poetry
      - name: Install dependencies for `web`
        working-directory: web
        run: poetry install

      #- name: Run `web` tests
      #  working-directory: web
      #  run: poetry run pytest


  build:
    needs: test

    # Name the Job
    name: Build and publish docker image
    # Set the type of machine to run on
    runs-on: ubuntu-20.04

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # TODO: build and publish docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push web
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./web/Dockerfile
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ghcr.io/dhruvshah1214/cis188fp-web:latest

      - name: Build and push cronnjob
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./cron/Dockerfile
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ghcr.io/dhruvshah1214/cis188fp-cron:latest

  deploy:
    name: Deploy latest version of code
    if: github.ref == 'refs/heads/master'
    needs: build

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get a kubeconfig & run
        run: |
          aws eks --region us-east-1 update-kubeconfig --name cis188fp --alias cis188fp
          kubectl config set-context --current
          kubectl apply -f ./k8s/